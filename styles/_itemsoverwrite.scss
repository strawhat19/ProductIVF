:root {
    --dark: black !important;
    --light: white !important;
    --darkInverse: white !important;
    --lightInverse: black !important;
    --primary: var(--gameBlue) !important;
    --detailViewBG: rgba(21, 90, 130, 0.85);
    --primarySoft: var(--gameBlue) !important;
    --darkGradient: linear-gradient(90deg, var(--whiteGlass) var(--buttonSize), var(--blackGlass) var(--buttonSize)) !important;
    --lightGradient: linear-gradient(90deg, var(--blackGlass) var(--buttonSize), var(--whiteGlass) var(--buttonSize)) !important;
}

.authFormBack {
    max-width: 100px;
}

.disabledIconBtn {
    pointer-events: none;
}

.boardOptionsRow {
    transition: var(--transition);
    &.collapsedBoardOptionsRow {
        max-width: fit-content !important;
    }
}

.itemTypesMenu {
    .itemTypeIconRow {
        grid-gap: 5px;
        min-width: 90px;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        .typeIconIcon {
            width: 65px;
            text-align: center;
            pointer-events: none;
        }
        .typeIconText {
            font-size: 12px;
            font-weight: 600;
            pointer-events: none;
        }
    }
}

.board {
    .column {
        * {
            --gameBlueInverse: var(--primary);
        }
        .items {
            // --blackGlass: rgba(0, 0, 0, 0.95);
            --whiteGlass: rgba(255, 255, 255, 0.95);
            * {
                filter: invert(0) !important;
            }
            &.boardColumnItems {
                .boardItem {
                    &:not(.complete) {
                        .changeLabel, .itemDate, itemButtons button {
                            transition: none !important;
                        }
                    }
                    .itemRow {
                        &:hover {
                            .itemName, .changeLabel, .itemDate, .taskProgressCount {
                                color: var(--dark) !important;
                            }
                            .progress {
                                text {
                                    fill: var(--dark) !important;
                                }
                            }
                            .itemOptions {
                                button {
                                    background: var(--dark) !important;
                                }
                            }
                            background: var(--lightGradient) !important;
                        }
                    }
                    .boardTask {
                        &.complete {
                            .changeLabel {
                                color: var(--dark) !important;
                                text-decoration-color: var(--dark) !important;
                                -webkit-text-decoration-color: var(--dark) !important;
                            }
                        }
                    }
                    &.complete {
                        * {
                            transition: 85ms var(--delayedTransition) !important;
                        }
                        .itemName, .changeLabel, .itemDate, .taskProgressCount {
                            color: var(--dark) !important;
                        }
                        .itemRow, .subTaskItem {
                            background: var(--lightGradient) !important;
                        }
                        .boardTask {
                            &:hover {
                                .itemName, .changeLabel, .itemDate {
                                    color: var(--darkInverse) !important;
                                    text-decoration-color: var(--primary) !important;
                                    -webkit-text-decoration-color: var(--primary) !important;
                                }
                                .taskOptions {
                                    button {
                                        background: var(--darkInverse) !important;
                                    }
                                    .taskCheckbox {
                                        background: var(--darkInverse) !important;
                                        &::before {
                                            color: var(--primary) !important;
                                        }
                                    }
                                }
                                background: var(--darkGradient) !important;
                            }
                        }
                    }
                }
            }
        }
    }
}