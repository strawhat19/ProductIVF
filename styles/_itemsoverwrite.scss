:root {
    --dark: black !important;
    --light: white !important;
    --darkInverse: white !important;
    --lightInverse: black !important;
    --primary: var(--gameBlue) !important;
    --detailViewBG2: rgba(0, 63, 99, 0.85);
    --detailViewBG: rgba(21, 90, 130, 0.85);
    --detailViewBG3: rgba(21, 90, 130, 0.55);
    --primarySoft: var(--gameBlue) !important;
    --whiteGradient: linear-gradient(90deg, var(--blackGlass) var(--buttonSize), var(--light) var(--buttonSize)) !important;
    --darkGradient: linear-gradient(90deg, var(--whiteGlass) var(--buttonSize), var(--blackGlass) var(--buttonSize)) !important;
    --lightGradient: linear-gradient(90deg, var(--blackGlass) var(--buttonSize), var(--whiteGlass) var(--buttonSize)) !important;
}

[data-test-id="CircularProgressbarWithChildren"] {
    div {
        display: flex;
        align-items: center;
        justify-content: center;
        &:has([data-test-id="CircularProgressbarWithChildren__children"]) {
            [data-test-id="CircularProgressbarWithChildren__children"] {
                max-width: fit-content;
                margin-top: 0 !important;
            }
        }
    }
}

.itemDraggableWrapper, .taskMainWrap {
    &:has(.status_Active) {
        color: white !important;
        background: linear-gradient(90deg, var(--blackGlass) var(--buttonSize), var(--detailViewBG2) var(--buttonSize)) !important;
    }
}

.authFormBack {
    max-width: 100px;
}

.disabledIconBtn {
    pointer-events: none;
}

.boardOptionsRow {
    transition: var(--transition);
    &.collapsedBoardOptionsRow {
        max-width: fit-content !important;
    }
}

.relatedURLs {
    top: -10px;
    position: relative;
}

.formCenterData {
    width: 100%;
    align-self: flex-start;
    .itemDetailURLs {
        flex-wrap: wrap;
    }
    .itemDetailURLsFieldLabels {
        align-self: flex-start;
    }
}

.tasksContainer {
    width: 100%;
    display: flex;
    grid-gap: 10px;
    flex-direction: column;
}

.formTop, .tasksContainer {
    .itemDetails_Board {
        .itemDetails_List {
            padding: 0 !important;
            --columnWidth: 100% !important;
            min-height: fit-content !important;
            &:has(.IDTag) {
                background: transparent !important;
            }
            .items {
                min-height: fit-content !important;
                .item {
                    .itemDetailContentsTagParent {
                        padding: 0 !important;
                        .itemCategory {
                            font-size: 16px !important;
                            .tagIconBadge {
                                font-size: 13px !important;
                            }
                        }
                    }
                    .taskElement {
                        margin: 0 !important;
                        width: 100% !important;
                        .taskItems {
                            &.wScroll {
                                overflow: auto;
                                max-height: 105px;
                            }
                            width: 100% !important;
                            max-width: 100% !important;
                            min-width: 100% !important;
                            .taskMainWrap {
                                &.dndFirst {
                                    border-top: 0 !important;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

.itemDetailFieldMetric {
    max-height: 20px;
    justify-content: flex-start;
    .itemDetailType {
        max-width: fit-content;
    }
    .itemDetailSubType {
        padding-right: 10px;
    }
    .statusFieldInner {
        display: flex;
        .statLabel {
            font-weight: 400;
        }
    }
}

.itemTypesMenu {
    .itemTypeIconRow {
        grid-gap: 5px;
        min-width: 90px;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        .typeIconIcon {
            width: 65px;
            text-align: center;
            pointer-events: none;
        }
        .typeIconText {
            font-size: 12px;
            font-weight: 600;
            pointer-events: none;
        }
    }
}

// i {
//     &.fa-trash {
//         color: red !important;
//     }
// }

.highlightSearchMatch {
    padding: 0 2px;
    border-radius: 2px;
    background-color: var(--darkCheckBox);
}  

.board {
    .column {
        * {
            --activeFontWeight: 700;
            --gameBlueInverse: var(--primary);
        }
        .items {
            --whiteGlass: rgba(255, 255, 255, 0.95);
            * {
                filter: invert(0) !important;
            }
            &.boardColumnItems {
                .boardItem {
                    &.activeItemBoard {
                        .itemChangeLabel {
                            font-weight: calc(var(--activeFontWeight) - 100);
                        }
                        .detailField {
                            font-weight: var(--activeFontWeight) !important;
                        }
                    }
                    &:not(.complete) {
                        .changeLabel, .detailField, itemButtons button {
                            transition: none !important;
                        }
                    }
                    .itemRow {
                        &:hover {
                            filter: brightness(1.15) !important;
                            // background: var(--lightGradient) !important;
                            // .itemName, .changeLabel, .detailField, .taskProgressCount {
                            //     color: var(--dark) !important;
                            // }
                            // .progress {
                            //     text {
                            //         fill: var(--dark) !important;
                            //     }
                            // }
                            // .itemOptions {
                            //     button {
                            //         background: var(--dark) !important;
                            //     }
                            // }
                        }
                    }
                    .boardTask {
                        &:not(.complete) {
                            &:hover {
                                .deleteTaskButton {
                                    &:hover {
                                        background: black !important;
                                    }
                                }
                            }
                        }
                        // &.active,
                        &.complete {
                            .changeLabel {
                                color: var(--dark) !important;
                                text-decoration-color: var(--dark) !important;
                                -webkit-text-decoration-color: var(--dark) !important;
                            }
                        }
                        &.activeItemOrTask {
                            --fontColor: var(--gameBlue) !important;
                            // background: var(--lightGradient) !important;
                            // &:hover {
                            //     background: var(--whiteGradient) !important;
                            // }
                            // .changeLabel {
                            //     // color: black !important;
                            //     font-weight: var(--activeFontWeight);
                            // }
                            // .detailField {
                            //     // color: black !important;
                            //     font-style: italic !important;
                            //     font-weight: var(--activeFontWeight) !important;
                            // }
                            // .deleteTaskButton {
                            //     background: black;
                            // }
                            input[type="checkbox"] {
                                &::before {
                                    font-size: 11px;
                                    // content: "✧" !important;
                                    content: "▶" !important;
                                    padding: 0px 8px !important;
                                    color: var(--fontColor) !important;
                                }
                            }
                            // &:hover {
                            //     .deleteTaskButton {
                            //         &:hover {
                            //             background: var(--blackGlass) !important;
                            //         }
                            //     }
                            // }
                        }
                    }
                    &.complete {
                        * {
                            transition: 85ms var(--delayedTransition) !important;
                        }
                        .itemName, .changeLabel, .detailField, .taskProgressCount {
                            color: var(--dark) !important;
                        }
                        .itemRow, .subTaskItem {
                            background: var(--lightGradient) !important;
                        }
                        .progressCircleText {
                            color: var(--dark) !important;
                        }
                        .boardTask {
                            &:hover {
                                background: var(--darkGradient) !important;
                                .itemName, .changeLabel, .detailField {
                                    color: var(--darkInverse) !important;
                                    text-decoration-color: var(--primary) !important;
                                    -webkit-text-decoration-color: var(--primary) !important;
                                    .tagNameField {
                                        color: black;
                                    }
                                }
                                .taskOptions {
                                    button {
                                        background: var(--darkInverse) !important;
                                    }
                                    .taskCheckbox {
                                        background: var(--darkInverse) !important;
                                        &::before {
                                            color: var(--primary) !important;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}