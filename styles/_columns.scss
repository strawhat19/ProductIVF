:root {
    --lightCheckBox: rgba(255, 61, 0, 0.2);
    --darkCheckBox: rgba(0, 194, 255, 0.2);
    --whiteGlassInvert: rgba(191, 230, 244, 1);
}

.board {
    .column {
        &.columns_1 { --columnWidth: 100% !important; }
        &.columns_2 { --columnWidth: calc(98.5% / 2) !important; }
        &.columns_3 { 
            --columnWidth: calc(97.5% / 3) !important;
            @media (max-width: 1500px) {
                .changeLabel {
                    &.columnName {
                        font-size: 16px;
                    }
                }
                .listTitleButtonLabel {
                    &.xlTitle {
                        &.firstTitle {
                            display: none !important;
                        }
                    }
                }
            }
            @media (max-width: 1400px) {
                .listTitleButtonLabel {
                    &.lTitle {
                        &.firstTitle {
                            display: none !important;
                        }
                    }
                }
            }
        }
        &.columns_4, &.multiColExtended { 
            --columnWidth: calc(95.5% / 4) !important;
            .subtaskHandle {
                .taskChangeLabel {
                    max-width: 220px !important;
                }
                &.complete {
                    .taskChangeLabel {
                        max-width: 200px !important;
                    }
                }
            }
            @media (max-width: 1500px) {
                .changeLabel {
                    &.columnName {
                        font-size: 16px;
                        &.xlTitle {
                            font-size: 14px;
                        }
                    }
                }
                .listTitleButtonLabel {
                    &.mTitle, &.lTitle, &.xlTitle {
                        display: none !important;
                    }
                    &.firstTitle {
                        display: none !important;
                    }
                }
                .deleteListButton {
                    &.deleteListButton {
                        --width: auto !important;  
                    }
                }
            }
            @media (max-width: 1400px) {
                .changeLabel {
                    &.columnName {
                        font-size: 14px;
                        &.lTitle {
                            font-size: 14px;
                        }
                        &.xlTitle {
                            font-size: 12px;
                        }
                    }
                }
            }
        }
    }
}

.deleteBoardButton, .deleteListButton, .deleteItemButton {
    position: relative;
    &.deleteListButton {
        --width: 85px !important;   
        width: var(--width) !important;
        min-width: var(--width) !important;
        max-width: var(--width) !important;
    }
}

.cancelBtn {
    i {
        &.mainIcon {
            font-size: 10px !important;
        }
    }
}

.hideForm {
    .subTaskItems {
        &.activeTasks {
            border-bottom-left-radius: var(--borderRadius) !important;
            border-bottom-right-radius: var(--borderRadius) !important;
        }
    }
    .subTaskItem {
        border-radius: 0 !important;
        &:last-child {
            &.dndLast {
                border-bottom-left-radius: var(--borderRadius) !important;
                border-bottom-right-radius: var(--borderRadius) !important;
            }
        }
    }
    .addForm {
        display: none !important;
    }
}

.formUserConfirmAction {
    cursor: pointer;
    min-height: var(--buttonSize);
    &:hover {
        background: transparent !important;
    }
    .confirmActionOption {
        color: black;
        font-size: 14px;
        grid-gap: 10px !important;
        font-weight: 600 !important;
        min-height: var(--buttonSize);
        justify-content: center !important;
        i, span {
            max-width: fit-content;
        }
        i {
            font-size: 18px !important;
        }
    }
}

.confirmAction {
    padding: 0;
    width: 100%;
    grid-gap: 0;
    min-height: 33px;
    position: absolute;
    align-items: center;
    background: white;
    min-width: max-content;
    border-radius: var(--borderRadius);
    justify-content: center;
    .confirmActionOption {
        width: 100%;
        display: flex;
        grid-gap: 8px;
        margin: 0 auto;
        min-height: 33px;
        font-weight: 700;
        flex-direction: row;
        align-items: center;
        padding: 3px 2px 3px 8px;
        justify-content: flex-start;
        transition: var(--transition);
        &:hover {
            background: black;
            color: white !important;
        }
        &:first-child {
            border-top-left-radius: var(--borderRadius);
            border-top-right-radius: var(--borderRadius);
        }
        &:last-child {
            border-bottom-left-radius: var(--borderRadius);
            border-bottom-right-radius: var(--borderRadius);
        }
        &:not(:last-child) {
            border-bottom: 1px solid var(--gameBlueSoft);
        }
    }
}

.columnStats {
    max-width: fit-content !important;
}

.detailsButton {
    border-radius: 0 !important;
}

.boardItem {
    &.activeBoardItem {
        &:hover {
            .itemButtons {
                &.taskButtons {
                    &.taskComplete {
                        filter: invert(0) !important;
                    }
                }
            }
        }
    }
    &.complete {
        .boardTask {
            &.complete {
                .itemOrder {
                    .itemIndex {
                        color: var(--gameBlueInverse) !important;
                    }
                }
                .changeLabel {
                    color: black;
                } 
                .itemButtons {
                    filter: invert(0) !important;
                }
            }
        }
    }
    &:not(:hover) {
        &:not(.complete) {
            .boardTaskDraggableWrap {
                &:has(.complete) {
                    .boardTask {
                        &.complete {
                            color: black;
                            background: linear-gradient(90deg, var(--blackGlass) var(--buttonSize), var(--whiteGlassInvert) var(--buttonSize)) !important;
                            .itemButtons {
                                input {
                                    &.task_check_box {
                                        &::before {
                                            color: black !important;
                                        }
                                    }
                                }
                                button {
                                    background: black;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    &:has(.itemFooter) {
        .progress {
            padding: 0.2px;
        }
    }
    &:not(&:has(.itemFooter)) {
        .progress {
            padding: 3px;
        }
    }
    &.itemHoverToExpand {
        &:not(:hover) {
            --boardItemHeight: 58px;
            &:has(.itemFooter) {
                --boardItemHeight: 71px;
            }
            overflow-y: hidden;
            height: var(--boardItemHeight) !important;
            min-height: var(--boardItemHeight) !important;
            max-height: var(--boardItemHeight) !important;
        }
    }
}

.stretchEditable {
    max-width: unset !important;
}

.droppableSubtasksArea {
    display: block;
}

.draggableItem {
    &:hover {
        .taskComponentBG {
            color: black;
            &.itemButtons {
                filter: invert(0) !important;
                input {
                    &.task_check_box {
                        filter: invert(0) !important;
                        background: var(--darkCheckBox) !important;
                    }
                }
            }
        }
    }
}

._tasks {
    width: 100%;
    grid-gap: 0;
    display: flex;
    // padding: 10px 0;
    flex-direction: column;
}

._task {
    width: 100%;
    background: var(--blackGlass);
}

.layoutButton {
    &.activeLayout {
        &:focus {
            filter: invert(1) !important;
        }
        background: black;
        color: white !important;
    }
}

.multiCol {
    .column2Layout {
        display: none;
    }
    .column3Layout {
        display: none;
    }
}

.columns_2 {
    .column3Layout {
        display: none;
    }
}

@media (min-width: 855px) {
    .layoutCols_3 {
        &:not(.multiCol) {
            .listItems {
                display: grid !important;
                min-height: auto !important;
                grid-template-columns: auto auto auto;
            }
        }
    }
}

@media (min-width: 600px) {
    .layoutCols_2 {
        &:not(.multiCol) {
            .listItems {
                display: grid !important;
                min-height: auto !important;
                grid-template-columns: auto auto;
            }
        }
    }
}

@media (max-width: 855px) {
    .column3Layout {
        display: none !important;
    }
}

@media (max-width: 600px) {
    .column2Layout {
        display: none !important;
    }
}