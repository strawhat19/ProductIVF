@use './styles/mui';
@use './styles/toast';
@use './styles/image';
@use './styles/grids';
@use './styles/utility';
@use './styles/columns';
@use './styles/contextmenu';
@use './shared/admin/features';
@use './styles/itemsoverwrite';
@use './styles/finaloverwrite';
@use './components/boards/kanban/kanban';
@use './components/selector/multiselector';

/* Montserrat */
@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

/* Caveat */
@import url("https://fonts.googleapis.com/css2?family=Caveat:wght@400;500;600;700&display=swap");

*, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    // Logos
    --html: #f16529;
    --css: #2862e9;
    --js: #f7df1e;
    --php: #7377ad;
    --node: #73ab60;
    --sass: #f783ac;
    --sql: #f783ac;
    --mongo: #00684a;
    --node: #3eb112;
    --git: #e94e31;
    --swift: #f4993a;
    --discord: #7289DA;
    --skeleton: #4c4c4c;

    // Theme
    --darkBG: black;
    --lightBG: white;
    --lightNavAndFooterBG: var(--lightBG);
    --darkNavAndFooterBG: var(--piratechsBlue);
    --navAndFooterBG: var(--darkNavAndFooterBG);
    --darkInputLightBG: rgba(249, 250, 251, .1);
    
    --bg: #010000;
    --posterH: 250px;
    --posterW: 165px;
    --buttonSize: 35px;
    --steel: #7a7a7a;
    --react: #0fccce;
    --grass: #00b900;
    --silver: #f2f2f2;
    --borderRadius: 4px;
    --success: #07d90d;
    --containerWidth: 95%;
    --gameBlue: #00c2ff;
    --softBlack: #1a1a1a;
    --secondary: #3c3c3c;
    --piratechs: #2b4261;
    --softBlack2: #636363;
    --authFormFontSize: 14px;
    --piratechsDark: #10141d;
    --main: rgb(0, 216, 255);
    --nextraColor: var(--nextra);
    --gameBlueInverse: #ff3d00;
    --toastify-color-info: var(--gameBlue) !important;

    // Semi Transparent
    --authGlass: rgba(0, 0, 0, 0.05);
    --mainTeal: rgba(32, 143, 163, 1);
    --blackGlass: rgba(0, 0, 0, 0.75);
    --silverGlass: rgba(0, 0, 0, 0.35);
    --piratechsBlue: rgba(1, 47, 74, 1);
    --mainGlass: rgba(255, 28, 11, 0.75);
    --dangerColor: rgba(255, 28, 11, 0.75);
    --softWhite: rgba(255, 255, 255, 0.87);
    --whiteGlass: rgba(255, 255, 255, 0.75);
    --gameBlueSoft: rgba(0, 194, 255, 0.75);
    --nextra: rgba(0, 170, 255, 0.5) !important;
    --menuBackground: var(--blackGlass) !important;
    --softSkyBlue: rgba(132, 169, 177, 1) !important;
    --delayedTransition: cubic-bezier(0.77, 0.2, 0.05, 1);
    --transition: 0.24s cubic-bezier(0.77, 0.2, 0.05, 1) !important;
}

.profileForm {
    width: 100%;
    grid-gap: 5px;
    flex-direction: column;
    .formFieldWithConfirm {
        width: 100%;
    }
    input, .formButtonsField {
        width: 100%;
        max-width: unset;
        justify-content: center;
        input {
            max-width: fit-content;
        }
    }
}

::selection {
    background: var(--darkCheckBox);
}

.dark {
    --navAndFooterBG: var(--darkNavAndFooterBG);
    aside {
        border-right: 1px solid var(--main) !important;
    }
    .nextra-nav-container {
        border-bottom: 1px solid var(--main);
        background: var(--navAndFooterBG) !important;
        nav, .nextra-nav-container-blur {
            background: transparent !important;
        }
    }
}

.light {
    --navAndFooterBG: var(--lightNavAndFooterBG) !important;
    .nextra-nav-container {
        background: var(--navAndFooterBG) !important;
        nav, .nextra-nav-container-blur {
            background: transparent !important;
        }
    }
}

.titleRow {
    padding: 10px;
    color: white;
    font-weight: 600;
    font-size: 1.2em;
    border-radius: var(--borderRadius);
    background: var(--gameBlueSoft);
    .innerRow {
        background: var(--blackGlass);
        h3 {
            font-size: 16px;
        }
        h4 {
            font-size: 14px;
        }
    }
}

.light {
    .item {
        color: white !important;
    }

    aside {
        border-right: solid 1px rgba(229, 231, 235, 1);
    }

    .xl\:nx-block {
        border-left: solid 1px rgba(229, 231, 235, 1);
    }
    
    footer {
        border-top: solid 1px rgba(229, 231, 235, 1);
    }
}

.dark {
    .line {
        &::before {
            color: var(--softWhite) !important;
        }
    }

    .nx-sticky {
        &:not(.nx-top-0) {
            background: var(--menuBackground) !important;
        }
    }

    html[class~="dark"] .dark\:nx-shadow-\[0_-12px_16px_\#111\] {
        background: var(--menuBackground) !important;
    }

    aside {
        background: var(--darkBG) !important;
        border-right: solid 1px var(--bg);
    }

    body {
        background: var(--menuBackground) !important;
    }

    article {
        background: var(--piratechsBlue);
    }

    .nextra-toc {
        border-left: solid 1px var(--bg);
    }

    header, nav, .nextra-nav-container-blur {
        backdrop-filter: blur(8px);
        --tw-shadow: 0 -12px 16px #111;
        background: transparent !important;
        border-bottom: solid 1px var(--bg);
        @supports (-webkit-backdrop-filter:blur(8px)) or ((-webkit-backdrop-filter: blur(8px)) or (backdrop-filter: blur(8px))) {
            html[class~="dark"] .nextra-nav-container-blur {
                background: transparent !important;
            }
        }
        @supports (-webkit-backdrop-filter:blur(1px)) or ((-webkit-backdrop-filter: blur(1px)) or (backdrop-filter: blur(1px))) {
            html[class~="dark"] .nextra-nav-container-blur {
                background: transparent !important;
            }
        }
    }
    
    html[class~=dark] .dark\:nx-bg-dark {
        background: var(--darkBG) !important;
    }

    footer {
        div {
            background: transparent !important;
        }
    }
}

article {
    padding: 8px 0 1em;
    min-height: calc(94vh - var(--nextra-navbar-height)) !important;
    main {
        padding: 0;
        width: 100% !important;
        max-width: 92rem !important;
    }
}

#minimizeTOCButton {
    padding: 1em;
    max-width: 30px;
    border-radius: 8px;
    align-self: baseline;
    /* filter: invert(1); */
    transition: var(--transition);
    background: rgba(0, 188, 247, 0.75);
    &:hover {
        color: black;
        filter: invert(0);
        background: white;
    }
}

.nextra-toc {
    width: auto;
    margin: 0 !important;
    padding: 0 !important;
    transition: var(--transition);
    &.minimized {
        width: 85px;
        p, ul, .loading, h2, form, blockquote, div a  {
            display: none !important;
        }
        .nextra-scrollbar div {
            padding: 13px !important;
        }
        #minimizeTOCButton {
            padding: 0 18px 0 10px;
            span {
                min-width: min-content;
                transform: rotateZ(180deg);
            }
        }
    }
    .nextra-scrollbar {
        padding-left: 1em;
        margin: 0 !important;
        overflow: visible !important;
        p, ul {
            padding: 0 0 1em 2em;
            li {
                position: relative;
                a {
                    font-size: 13px;
                    margin: 0;
                    max-width: 200px;
                    overflow: hidden;
                    white-space: nowrap;
                    text-overflow: ellipsis;
                }
            }
        }
    }
}

.spinnerEl {
    width: 100%;
    display: flex;
    flex-direction: row;
    .spinner {
        font-size: 18px;
        max-width: fit-content;
        transform-origin: center;
        transition: var(--transition);
        animation: spin 1s linear infinite;
    }
}

[dir="ltr"] .ltr\:-nx-mr-4 {
    margin-right: -2rem;
}

html[class~="dark"] .dark\:nx-border-neutral-800 {
    border-color: hsl(var(--nextra-primary-hue)100% 94%/.1) !important;
}

nav {
    a {
        &:first-child {
            order: -1;
        }
    }
}

.textOverflow {
    &:not(.extended) {
        max-width: 60%;
    }
    max-width: 100%;
    margin: 0 !important;
    display: inline-block;
    overflow: hidden !important;
    white-space: nowrap !important;
    text-overflow: ellipsis !important;
}

html[class~=dark] .dark\:nx-bg-dark {
    padding: 1em;
    margin: 0;
}

html[class~=dark] .dark\:nx-text-neutral-500, html[class~=dark] .dark\:nx-text-gray-400 {
    &:not(.excerpt) {
        @extend .hoverLink;
    }
    &::before {
        height: 1px;
    }
    transition: var(--transition) !important;
    color: var(--softWhite) !important;
    &:hover {
        color: white !important;
    }
}

.nx-max-w-\[90rem\] {
    max-width: 100% !important;
    padding: 0em;
}

.dark {
    .authForm {
        input {
            background: var(--darkInputLightBG) !important;
        }
    }
}

.boardsZeroState {
    width: 100%;
    padding: var(--buttonSize);
    display: flex;
    font-size: 16px;
    color: silver;
    font-weight: 500;
    text-align: center;
    font-style: italic;
    align-items: center;
    justify-content: center;
}

.addForm {
    max-height: var(--buttonSize);
    position: relative;
    border-radius: var(--borderRadius);
    .inputGroup {
        grid-gap: 5px !important;
        max-height: 33px !important;
    }
    input {
        padding: 10px 0px 10px 55px;
        &::placeholder {
            opacity: 0.5;
        }
        &[type="number"] {
            max-width: 15%;
            min-width: inherit !important;
            padding: 10px 0px 10px 15px !important;
        }
    }
    .selectBoardTypeWrapper {
        max-width: 29%;
        padding-right: 5px;
        background: var(--blackGlass);
        border-radius: var(--borderRadius);
    }
    select {
        display: flex;
        // max-width: 29%;
        font-size: 12px;
        min-height: 33px;
        flex-direction: row;
        align-items: center;
        text-transform: none;
        justify-content: center;
        background: transparent;
        padding: 5px 15px 5px 15px;
        border-radius: var(--borderRadius);
        option {
            color: white;
            font-size: 12px;
            min-height: 33px;
            padding: 5px 15px 5px 15px;
            background: var(--blackGlass);
            border-radius: var(--borderRadius);
        }
        &:focus-visible {
            border: 0 !important;
            outline: none !important;
        }
    }
    &.addBoardForm {
        input {
            border-top-right-radius: var(--borderRadius);
            border-bottom-right-radius: var(--borderRadius);
        }
    }
    &.addItemForm {
        &::before {
            display: none;
        }
    }
    .itemTypesMenu {
        left: 0;
        bottom: 45px;
        height: 100%;
        display: flex;
        grid-gap: 3px;
        position: absolute;
        transition: var(--transition);
        .typeIcon {
            border-radius: var(--borderRadius);
        }
        &:not(.show) {
            opacity: 0;
            margin-bottom: 75px;
            pointer-events: none;
        }
    }
}

.typeIcon {
    top: 0;
    left: 0;
    z-index: 1;
    width: var(--buttonSize);
    height: 100%;
    display: flex;
    font-size: var(--buttonSize);
    cursor: pointer;
    min-height: 33px;
    max-height: 33px;
    font-weight: 400;
    align-items: center;
    background: white;
    color: var(--gameBlue);
    justify-content: center;
    border-top-left-radius: 4px;
    transition: var(--transition);
    border-bottom-left-radius: 4px;
    &:not(.menuTypeIcon):not(.gridTypeIconButton) {
        position: absolute;
    }
    span {
        pointer-events: none;
    }
    i {
        font-size: 25px;
        text-align: center;
        pointer-events: none;
        &.textual {
            font-size: 17px;
        }
    }
    &.changeBoardTypeIcon {
        top: 1px;
    }
    &:hover {
        box-shadow: 0 0 10px white;
    }
}

.formItems {
    height: var(--buttonSize);
    min-height: var(--buttonSize);
    max-height: var(--buttonSize);
    form {
        &.addListForm {
            &::before { 
                font-size: 45px;
            }
        }
        &::before {
            max-height: 33px;
        }
    }
}

input {
    max-width: 100%;
    max-height: 100% !important;
}

.createBoard {
    margin-top: 10px !important;
    &.lists {
        .formItems {
            min-height: inherit !important;
        }
    }
}

.itemFooter {
    padding: 0 0 0 10px;
}

@media (max-width: 437px) {
    .itemButtons {
        button {
            span {
                display: none !important;
            }
        }
    }
    .listNameRow {
        &.longName {
            max-width: 67% !important;
        }
    }
}

@media (max-width: 445px) {
    .itemButtons {
        button {
            .index {
                display: none !important;
            }
        }
    }
}

@media (max-width: 467px) {
    .overflowingBoard {
        .itemDate {
            display: none !important;
        }
    }
    .listNameRow {
        &.longName {
            max-width: 38% !important;
        }
    }
}

@media (max-width: 515px) {
    .status {
        display: none !important;
    }
    .itemDate {
        justify-content: flex-end !important;
    }

    .addListFormItem {
        h2 {
            display: none;
        }
    }
}

@media (max-width: 562px) {
    .listNameRow {
        &.longName {
            max-width: 43%;
        }
    }
}

@media (min-width: 768px) {
    aside, .nextra-toc {
        width: auto !important;
        display: none !important;
    }
}

@media (max-width: 850px) {
    nav {
        * {
            &.nx-relative {
                display: none !important;
            }
            &.nx-text-sm {
                display: none !important;
            }
        }
    }
}

@media (max-width: 903px) {
    .board {
        &.lists {
            overflow: visible !important;
            overflow-x: scroll;
            &.container {
                .column {
                    min-width: 75% !important;
                }
            }
        }
    }
}

@media (max-width: 933px) {
    .filterFormDiv {
        .deleteButton {
            .iconButtonText {
                display: none;
            }
        }
    }
}

@media (max-width: 985px) {
    .nextra-nav-container {
        .navFormDiv {
            display: none !important;
        }
    }
}

@media (max-width: 992px) {
    .board {
        &.lists {
            overflow-x: scroll;
            overflow: visible !important;
            .column {
                font-size: 0.85em;
                min-width: 48.9% !important;
            }
        }
    }
    .boardItem:not(.boardItem:has(.itemFooter)) .progress {
        top: -0.6px;
        padding: 5px;
    }
}

@media (max-width: 1120px) {
    .clipColumns {
        .subTaskItem {
            .subtaskActions {
                grid-gap: 0;
                align-items: baseline;
                padding: 0 5px 0 10px !important;
                flex-direction: column !important;
                .taskChangeLabel {
                    padding-top: 1px !important;
                    padding-bottom: 1px !important;
                }
            }
            .itemDate {
                min-width: 100%;
                padding: 5px 0 5px 10px;
                margin-top: -5px !important;
                border-top: solid 1px var(--gameBlue);
                justify-content: flex-start !important;
            }
        }
    }
}

// @media (min-width: 1600px) {
// @media (min-width: 1420px) {
@media (min-width: 1367px) {
    .status {
        overflow: hidden;
        text-align: left;
        white-space: nowrap;
        display: inline-block;
        text-overflow: ellipsis;
        max-width: 50px !important;
    }
   .multiList {
    .itemName {
        max-width: 220px;
    }
    .itemDate {
        min-width: 135px !important;
    }
   }
}

// @media (max-width: 1600px) {
// @media (max-width: 1420px) {
@media (max-width: 1367px) {
    .manageButton {
        display: none !important;
    }
  .lists {
    grid-template-columns: 1fr !important;
    .itemName {
        width: 100% !important;
        grid-gap: 10px !important;
        justify-content: flex-start;
        .status {
            // @extend .textOverflow;
            text-align: left;
            overflow: hidden;
            display: inline-block;
            width: 50px !important;
            text-overflow: ellipsis;
            max-width: 50px !important;
        }
    }
  }
}

@media (min-width: 1367px) and (max-width: 1400px) {
    .status {
        display: none !important;
    }
    .multiList {
        .itemDate {
            justify-content: flex-end !important;
        }
    }
}

@media (min-width: 1367px) and (max-width: 1460px) {
    .multiList {
        .listNameRow {
            &.longName {
                max-width: 40%;
            }
        }
    }
}

@media (max-width: 1395px) {
    .columnStats {
        display: none !important;
    }
    .boardTitle {
        .middle {
            display: none !important;
        }
        .divSep {
            display: none !important;
        }
    }
}

@media (min-width: 1460px) and (max-width: 1560px) {
    .multiList {
        .listNameRow {
            &.longName {
                max-width: 48%;
            }
        }
    }
}

@media (max-width: 1485px) {
    .overflowingBoard {
        .subTaskItem {
            .subtaskActions {
                grid-gap: 0;
                align-items: baseline;
                padding: 0 5px 0 10px !important;
                flex-direction: column !important;
                .taskChangeLabel {
                    padding-top: 1px !important;
                    padding-bottom: 1px !important;
                }
            }
            .itemDate {
                min-width: 100%;
                padding: 5px 0 5px 10px;
                margin-top: -5px !important;
                border-top: solid 1px var(--gameBlue);
                justify-content: flex-start !important;
            }
        }
        .columnStats {
            display: none;
        }
    }
}

@media (max-width: 1550px) {
    .filtersSubscript {
        display: none !important;
    }
    .copyButton {
        display: none !important;
    }
    .status {
        display: none !important;
    }
}

@media (max-width: 1575px) {
    .boardDate {
        display: none !important;
    }
}

@media (max-width: 1660px) {
    .threeBoard, .moreBoard {
        .columnStats {
            display: none !important;
        }
    }
}

footer {
    div {
        padding: 1em !important;
    }
}

.logo {
    padding: .5rem .5rem .5rem 0;
}

section {
    &.Toastify {
        padding: 0;
    }
}

body {
    overflow-x: hidden;
    transition: var(--transition);

    article {
        div {
            &:has(time) {
                display: none !important;
            }
        }
        @media (min-aspect-ratio: 18/9) {
            min-height: calc(93vh - var(--nextra-navbar-height)) !important;
        }
    }

    &:has(._projects_boards) {
        article {
            overflow: hidden;
            padding-top: max(env(safe-area-inset-top), 1.5rem);
            h1 {
                margin: -10px 0 -7px 0;
            }
            .board {
                --boardColumnHeight: 661px;
                @media (min-aspect-ratio: 18/9) {
                    --boardColumnHeight: 533px;
                }
                .column {
                    align-items: flex-start;
                    min-height: var(--boardColumnHeight);
                    .items {
                        min-height: calc(var(--boardColumnHeight) - 115px);
                    }
                }
            }
        }
    }

    font-family: Montserrat, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
        Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

section {
    width: 100%;
    height: auto;
    display: flex;
    grid-gap: 1em;
    margin: 0 auto;
    padding: 1em 0;
    overflow: visible;
    align-items: center;
    justify-content: space-between;

    * {
        width: 100%;
        height: auto;
        display: flex;
        grid-gap: 1em;
        flex-direction: column;
    }
}

.customButtons {
    button, input[type="submit"] {
        border: 0;
        padding: 10px;
        outline: none;
        cursor: pointer;
        font-family: 'Montserrat';
        color: white !important;
        background: var(--blackGlass);
        transition: var(--transition);
        border-radius: var(--borderRadius);

        &[type="submit"] {
            line-height: 1;
            font-weight: 600;
            border: 0 !important;
            color: white !important;
            max-height: 33px !important;
            padding: 10.5px 25px !important;
            background: var(--gameBlueSoft) !important;
            &[name="authFormSubmit"] {
                font-weight: 500;
            }
            &:hover {
                color: black !important;
                background: white !important;
            }
        }

        i {
            pointer-events: none;
        }

        &.rowButton {
            margin-top: -17px;
        }

        &:not([type="button"]) {
            &:hover {
                box-shadow: 0 0 8px 0px black;
            }
        }

        &:active {
            transform: scale(1.01);
            box-shadow: inset 0 0 8px 0px black;
        }
    }
}

::-webkit-scrollbar {
    position: relative;
    width: 1px !important;
    border-radius: var(--borderRadius);
    background: var(--gameBlue) !important;
}

::-webkit-scrollbar-thumb {
    background: var(--navAndFooterBG);
    border-radius: var(--borderRadius);
}

.nextra-search {
    input {
        border: 0 !important;
        outline: none !important;
    }
}

.navFormSection {
    padding: 0 !important;
    .submit {
        max-width: fit-content !important;
    }
}

@supports (-webkit-backdrop-filter:blur(1px)) or ((-webkit-backdrop-filter:blur(1px)) or (backdrop-filter:blur(1px)))  {
    html[class~=dark] .nextra-nav-container-blur {
        background: rgba(0, 0, 0, 0.35) !important;
    }
}

p em {
    font-weight: 500;
}

form {
    height: 100% !important;
    textarea {
        width: 100%;
        min-height: 100px;
        max-height: 100% !important;
        &::placeholder {
            opacity: 0.5;
        }
    }
    input, textarea {
        font-weight: 400;
        padding: 10px 15px;
        outline: none !important;
        color: white !important;
        font-family: "Montserrat";
        max-height: 33px !important;
        transition: var(--transition);
        font-size: var(--authFormFontSize);
        border-radius: var(--borderRadius);
        background: var(--blackGlass) !important;
        // box-shadow: 0 0 10px var(--gameBlueSoft),0 0 20px var(--gameBlueSoft);

        label {
            padding: 50px !important;
        }
    
        &::placeholder {
            color: silver;
        }

        &[type="submit"] {
            cursor: pointer;
            &:hover {
                border: 0 !important;
            }
        }
    
        &[type="color"] {
            border: 0;
            padding: 1em;
            outline: none;
            min-height: 60px;
            position: relative;
            border-radius: var(--borderRadius);
    
            &::before {
                transform: translate(-50%, -50%);
                content: attr(data-color);
                position: absolute;
                top: 50%;
                left: 50%;
                color: white;
                font-weight: 500;
                height: 28px;
                width: 96.5%;
                // border: solid 2px var(--blackGlass);
                display: flex;
                justify-content: center;
                align-items: center;
            }
    
            &.dark {
                &::before {
                    color: white;
                }
            }
    
            &.light {
                &::before {
                    color: black;
                }
            }
        }
    }
}

.addBoardForm {
    max-height: 33px;
}

html[class~=dark] {
    .changeLabel:focus-visible {
        border: 0 !important;
        outline: none !important;
        --tw-ring-opacity: 0 !important;
        --tw-ring-color: none !important;
    }
}

textarea {
    height: 22px;
    overflow-y: hidden;
}

.subtaskActions {
    textarea {
        height: 16px;
        &:hover {
            background: rgba(255, 61, 0, 0.2) !important;
        }
    }

    .changeLabel {
        &.complete {
            text-decoration: line-through;
            text-decoration-color: black;
            text-decoration-thickness: 0 !important;
        }
    }
}

.changeLabel {
    cursor: text;
    padding: 0 10px;
    min-width: 75px;
    border-radius: 8px;
    background: transparent;
    margin: 0 -10px !important;
    transition: var(--transition);
    &.columnName {
        font-size: 1.35em;
        margin: 0 !important;
        max-width: fit-content;
        font-weight: 700 !important;
        &:hover {
            &:not(:focus-visible) {
                background: var(--darkCheckBox);
                filter: invert(0) !important;
                color: white !important;
            }
        }
    }
    &::selection {
        color: black;
        background: var(--darkCheckBox) !important;
    }
    &:not(:focus-visible) {
        &::selection {
            background: transparent !important;
        }
    }
    &:hover {
        &:not(:focus-visible) {
            background: var(--darkCheckBox);
        }
    }
}

.flex {
    width: 100%;
    display: flex;
    max-width: 100%;
    align-items: center;
    justify-content: space-between;
    &.isColumn {
        flex-direction: column !important;
    }
    &.row {
        grid-gap: 13px;
        flex-direction: row !important;
        &.end {
            justify-content: flex-end;
        }
        .innerRow {
            width: 100%;
            margin: 0 auto;
            grid-gap: 10px;
            padding: 10px 15px;
            align-items: center;
            border-radius: var(--borderRadius);
        }
        .left {
            .boardDate {
                margin-left: -15px;
                justify-content: end;
                .itemDate {
                    margin-left: -15px !important;
                }
            }
            max-width: fit-content;
            * {
                max-width: min-content;
            }
            text-align: left;
            justify-content: flex-start;
        }
        .middle {
            max-width: fit-content;
            * {
                max-width: min-content;
            }
            text-align: right;
            justify-content: flex-end;
        }
        .right {
            .filterFormDiv {
                width: 100%;
                max-width: none;
                form {
                    max-height: 33px;
                    max-width: none;
                    button {
                        max-width: min-content;
                        @media (max-width: 1635px) {
                            display: none;
                        }
                    }
                }
            }
        }
    }
}

.item {
    font-size: 1em !important;
    font-weight: 600 !important;
    &:hover {
        .subTaskItem {
            &:hover {
                .subtaskActions {
                    .itemDate {
                        border-color: var(--gameBlue) !important;
                    }
                }
            }
            .subtaskActions {
                .itemDate {
                    border-color: var(--gameBlueInverse) !important;
                }
            }
        }
    }
    &.complete {
        img {
            filter: invert(1);
        }
        @media (min-width: 1120px) {
            font-size: 1em !important;
        }
        font-weight: 600 !important;
        .subTaskItem {
            .subtaskActions {
                .itemDate {
                    border-color: var(--gameBlueInverse) !important;
                }
            }
        }
        &:hover {
            @media (min-width: 1120px) {
                font-size: 1em !important;
            }
            font-weight: 600 !important;
        }
    }
    .itemDate {
        font-weight: 600 !important;
        font-size: 0.65em !important;
    }
    .subTaskItem {
        padding: 0px;
        user-select: none;
        position: relative;
        box-sizing: border-box;
        font-size: 0.85em !important;
        &.dragging {
            opacity: 1 !important;
            z-index: 9999 !important;
            top: 50px !important;
            left: 15px !important;
        }
    }
    input {
        padding-top: 7px !important;
        &::placeholder {
            @media (min-width: 1120px) {
                font-size: 1.15em !important;
            }
            font-weight: 600 !important;
        }
    }
    &:hover {
        .subtaskAddForm {
            border-top: 1px solid var(--gameBlueInverse) !important;
        }
        .slashes {
            color: var(--gameBlueInverse);
        }
        .subTaskItem {
            .itemDate {
                border-color: var(--gameBlue) !important;
            }
            &:hover {
                .changeLabel {
                    filter: inherit;
                    color: white !important;
                }
                .itemButtons {
                    button {
                        background: white !important;
                    }
                }
            }
        }
    }
    &.complete {
        .changeLabel {
            color: white;
        }
        &:hover {
            .changeLabel {
                color: black;
            }
            .subTaskItem {
                .changeLabel {
                    color: black;
                }
                &:hover {
                    .changeLabel {
                        color: white;
                    }
                }
            } 
        }
    }
}

.slashes {
    color: var(--gameBlue);
    max-width: fit-content;
    display: contents;
    font-weight: 600;
}

.complete {
    .slashes {
        color: var(--gameBlueInverse);
    }
    &:hover {
        .changeLabel {
            color: white;
            font-weight: 600 !important;
        }
    }
}

.all_boards_div  {
    width: 100%;
    .bord {
        display: flex;
        grid-gap: 15px;
        flex-direction: column;
        .board {
            flex-direction: row;
            form {
                input {
                    max-height: 33px !important;
                }
            }
            .listNameRow {
                max-width: unset;
            }
        }
    }
}

.overlay {
    top: 0;
    right: 0;
    width: 100%;
    z-index: 10;
    height: 100%;
    display: flex;
    position: fixed;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(9px);
    background: rgba(0, 40, 46, 0.5);
}

.unfocusedBoard {
    .column {
        .items {
            max-height: 350px;
        }
    }
}

.focusBoard {
    transition: var(--transition);
    .board {
        align-items: flex-start;
        transition: var(--transition);
        .column {
            transition: var(--transition);
            grid-gap: 10px !important;
            .items {
                transition: var(--transition);
                max-height: 100%;
            }
        }
    }
}

.authStateComponent {
    &.hasUserSignedIn {
        font-weight: 500;
    }
}

.alert {
    width: 450px;
    height: 450px;
    display: flex;
    padding: 40px;
    grid-gap: 15px;
    position: relative;
    align-items: center;
    flex-direction: column;
    backdrop-filter: blur(5px);
    justify-content: flex-start;
    transition: var(--transition);
    box-shadow: 0 0 8px 0px black;
    border-radius: var(--borderRadius);

    background: var(--detailViewBG);
    // background: var(--blackGlass);
    // background: rgba(1, 47, 74, 0.75);
    // background: rgba(0, 194, 255, 0.4);

    .alertTitleRow {
        width: 95%;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-radius: var(--borderRadius);
        border-bottom: 4px solid var(--gameBlue);
        .alertTitle {
            width: 100%;
            color: white;
            font-weight: 600;
            font-size: 2.5em;
        }
        .rightTitleField {
            text-align: right;
            max-width: fit-content;
        }
    }

    .inner {
        padding: 0;
        width: 100%;
        height: 100%;
        display: flex;
        max-width: 95%;
        overflow: auto;
        max-height: 86%;
        align-items: center;
        justify-content: center;
        // padding: 0 15px 0 0;
    }

    form {
        width: 98%;
        grid-gap: 15px;
        margin: 0 auto;
        h3 {
            font-size: 2em;
            font-style: italic;
        }
        input {
            width: 100%;
            &::placeholder {
                opacity: 0.5;
            }
        }
        button {
            width: 33%;
            color: black;
            padding: 5px 0;
            font-weight: 600;
            background: white;
            align-self: flex-end;
            justify-content: center;
            transition: var(--transition);
            &.deleteButton {
                color: white;
                background: red;
                &:hover {
                    font-weight: 800;
                    color: black;
                }
            }
        }
    }

    &.slim {
        height: 120px;
    }

    .alertButton {
        position: absolute;
        background: black;
        font-weight: 900;
        font-size: 16px;
        // filter: invert(1);
        color: var(--gameBlue);
        right: 15px;
        top: 15px;
        width: var(--buttonSize);
        display: flex;
        justify-content: center;
        align-items: center;
        &:hover {
            color: white;
        }
    }

    h3,
    p {
        padding: 5px 0;
        text-align: center;
    }
}

.hoverLink {
    display: flex;
    grid-gap: 0.3em;
    position: relative;
    align-items: center;
    transition: var(--transition);

    &::before {
        right: 0;
        z-index: 0;
        width: 100%;
        bottom: 1px;
        height: 1px;
        display: block;
        position: absolute;
        transform: scale(0, 1);
        content: "" !important;
        transform-origin: 0% 100%;
        transition: var(--transition);
        background: var(--gameBlueSoft);
    }

    &:hover {
        transition: var(--transition);

        &::before {
            transform: scale(1, 1);
            transition: 500ms ease-in-out;
        }
    }
}

.listOrder {
    width: 50px;
    height: 100%;
    padding: 1em 0;
    min-width: 50px;
    background: white;
    max-width: fit-content;
    min-height: 100% !important;
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
}

.addItemForm {
    padding: 0 !important;
    width: 100% !important;
    .submit {
        border: 0 !important;
        &:hover {
            padding: 10px 25px !important;
        }
    }
}

.addListFormItem {
    grid-gap: 1em;
    display: flex;
    flex-direction: row;
    .addListFormItemSection {
        padding: 0;
        max-width: 100%;
        .addListForm {
            grid-gap: 10px;
            overflow: hidden;
            align-items: center;
            padding: 0 !important;
            width: 100% !important;
            max-width: 100% !important;
            justify-content: space-between;
            border-radius: var(--borderRadius) !important;
            .submit {
                border: 0 !important;
                &:hover {
                    padding: 10px 25px !important;
                }
            }
        }
    }
}

.addListDiv {
    width: 100%;
}

.lists {
    display: grid;
    margin: 0 auto;
    overflow: visible;
    align-items: baseline;
    width: calc(var(--containerWidth));
    &.oneList {
        grid-template-columns: repeat(1, 1fr);
    }

    &.multiList {
        grid-template-columns: repeat(2, 1fr);
    }

    form {
        input {
            &.submit {
                max-width: fit-content;
                max-width: fit-content;
                color: black !important;
                background: white !important;
            }
        }
    }

    &.extended {
        width: 100%;
        display: flex;
    }

    .buttonLabel {
        justify-content: flex-start;
    }

    .list {
        position: relative;
        padding: 10px !important;
        border-radius: var(--borderRadius);
        background: var(--gameBlueSoft) !important;

        .listName {
            text-transform: capitalize;
        }

        h2 {
            color: white;
            max-width: fit-content !important;
        }

        /* Neumorphic Inner shadow */
        box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.2);

        /* Neumorphic Outer shadow */
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1),
        0px 0px 20px rgba(0, 0, 0, 0.05);

        .items {
            gap: 0em;
            display: grid;
            overflow-y: auto;
            min-height: 367px;
            overflow-x: hidden;
            width: 100% !important;

            &.overflowingList {
                padding: 0 10px 0 0 !important;
            }

            transition: var(--transition);

            &::-webkit-scrollbar {
                position: relative;
                border-radius: var(--borderRadius);
                width: 4px !important;
                background: var(--blackGlass) !important;
            }
            &::-webkit-scrollbar-thumb {
                background: var(--softWhite);
                border-radius: var(--borderRadius);
            }

            &.oneList {
                padding: 2em 0 !important;
                grid-template-columns: auto auto auto auto !important;
            }

            &.twoList {
                padding: 1em 0 !important;
                grid-template-columns: auto auto !important;
            }

            &.bigList {
                max-width: 100% !important;
                grid-template-columns: auto auto !important;
            }

            &.boardColumnItems {
                &:hover {
                    .item {
                        &.complete {
                            .itemButtons {
                                &.taskButtons {
                                    filter: invert(0);
                                    &.taskButtonsComplete {
                                        filter: invert(0) !important;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            .item {
                width: 100%;
                cursor: grab;
                display: flex;
                grid-gap: 0px;
                font-size: 0.8em;
                min-height: var(--buttonSize);
                position: relative;
                align-items: center;
                padding: 0em !important;
                background: var(--blackGlass);
                justify-content: space-between;
                border-radius: var(--borderRadius);
                transition: filter, opacity var(--transition);

                &.unfocus {
                    opacity: 0.35;
                    pointer-events: none;
                    filter: blur(3px) !important;
                }

                span {
                    width: 100%;
                    max-height: 100%;
                }

                &:last-child {
                    margin-bottom: 0 !important;
                }

                .boardItemImage {
                    width: auto;
                    min-height: 75px;
                    max-width: 175px;
                    max-height: 350px; 
                    margin-left: -13px;
                    align-self: stretch;
                    height: 100% !important;
                    object-position: top left;
                    object-fit: cover !important;
                }

                &:hover {
                    .itemRow {
                        background: linear-gradient(90deg, var(--whiteGlass) var(--buttonSize), var(--blackGlass) var(--buttonSize));
                        img {
                            filter: invert(1);
                        }
                    }
                    &:not(.itemOrder) {
                        filter: invert(1);
                    }
                    &:not(.complete) {
                        .taskChangeLabel {
                            color: white;
                            filter: invert(0);
                            &.complete {
                                color: black;
                            }
                        }
                        .itemButtons {
                            button {
                                color: var(--gameBlueInverse);
                            }
                        }
                    }
                    .itemSep {
                        filter: invert(1);
                    }
                    .itemOrder {
                        .itemIndex {
                            filter: invert(1);
                        }
                    }
                    .itemButtons {
                        filter: invert(1);
                    }
                    &:not(.complete) {
                        .noTasks {
                            opacity: 1 !important;
                            height: 100% !important;
                            pointer-events: all !important;
                        }
                    }
                    .progress {
                        filter: invert(1);
                        .CircularProgressbar-text {
                            font-weight: 600;
                        }
                    }
                    .subTaskItem {
                        border-color: var(--gameBlueInverse) !important;
                    }
                    .subtaskAddForm {
                        i {
                            color: var(--gameBlueInverse) !important;
                        }
                        &::before {
                            color: var(--gameBlueInverse);
                        }
                    }
                }

                .itemRow {
                    border-radius: var(--borderRadius);
                    &:not(.completed) {
                        border-bottom-right-radius: 0;
                    }
                    /* Neumorphic Inner shadow */
                    box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.2);

                    /* Neumorphic Outer shadow */
                    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1), 0px 0px 20px rgba(0, 0, 0, 0.05);
                }

                .itemOrder {
                    width: 50px;
                    display: flex;
                    padding: 1em 0;
                    min-width: 50px;
                    max-height: 100%;
                    font-weight: 700;
                    text-align: center;
                    position: relative;
                    align-items: center;
                    flex-direction: row;
                    color: var(--gameBlue);
                    height: 100% !important;
                    justify-content: center;
                    border-top-left-radius: 4px;
                    border-bottom-left-radius: 4px;
                    .itemIndex {
                        justify-content: center;
                        flex-direction: row;
                        align-items: center;
                        grid-gap: 3px;
                    }
                    .itemIconType {
                        opacity: 0.45;
                        font-size: 0.85em;
                        max-width: fit-content;
                        &.Task {
                            font-size: 0.65em;
                        }
                    }
                    // transition: var(--transition);

                    // .itemIndex {
                    //     transition: var(--transition);
                    // }
                }

                .itemName {
                    grid-gap: 0 !important;
                    text-transform: capitalize;
                    // font-weight: 500 !important;
                    transition: var(--transition);
                    &:not(.itemDate) {
                        padding: 10px 0;
                        justify-content: center;
                        white-space: normal !important;
                        word-wrap: break-word !important;
                    }
                }
                
                .itemDate {
                    font-size: 11px;
                    padding-right: 0;
                    text-align: right;
                    overflow: visible;
                    // max-width: fit-content;
                    grid-gap: 10px !important;
                    max-width: 160px !important;
                    justify-content: space-between;
                    * {
                        max-width: fit-content;
                    }
                }

                .rowButtons {
                    grid-gap: 0;
                    flex-direction: row;
                    padding: 0 !important;
                    button {
                        border-radius: 0;
                        height: 100% !important;
                        padding: 3.5em 0 !important;
                        max-height: 100% !important;
                        min-height: 100% !important;
                        align-self: stretch !important;
                        display: inline-flex !important;
                        align-items: stretch !important;
                        align-content: stretch !important;
                        flex-direction: column !important;
                        &:last-child {
                            border-top-right-radius: var(--borderRadius);
                            border-bottom-right-radius: var(--borderRadius);
                        }
                    }
                }

                .itemButtons {
                    padding: 6px 15px 6px 6px !important;
                    &.taskButtons {
                        padding: 6px 8px 6px 6px !important;
                    }
                    button {
                        align-self: stretch;
                    }
                }

                .subTasks {
                    width: 100%;
                    bottom: -19px;
                    &:not(:has(input:focus-visible)) {
                        .noTasks {
                            transition: var(--transition);
                        }
                    }
                    .subTaskElement {
                        grid-gap: 0;
                        margin: 0 0 0 var(--buttonSize);
                        width: calc(100% - var(--buttonSize));
                        background: transparent !important;
                        box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.2);

                        /* Neumorphic Outer shadow */
                        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1), 0px 0px 20px rgba(0, 0, 0, 0.05);

                        border-bottom-right-radius: var(--borderRadius);
                        border-bottom-left-radius: var(--borderRadius);

                        &.noTasks {
                            margin: 0 0 0 35.7px;
                        }

                        .subTaskItems {
                            padding: 0;
                            grid-gap: 0;
                            background: transparent !important;
                            &.completedTasks {
                                border-bottom-left-radius: var(--borderRadius);
                                border-bottom-right-radius: var(--borderRadius);
                            }
                            .subTaskItem {
                                background: linear-gradient(90deg, var(--whiteGlass) var(--buttonSize), var(--blackGlass) var(--buttonSize));
                                &.complete {
                                    background: linear-gradient(90deg, var(--blackGlass) var(--buttonSize), var(--whiteGlass) var(--buttonSize));
                                    .taskDate {
                                        color: var(--dark);
                                    }
                                }
                                &:not(:last-child) {
                                    border-bottom: 1px solid var(--gameBlue);
                                }
                                &:first-child {
                                    border-top: 1px solid var(--gameBlue);
                                }
                                .taskChangeLabel {
                                    font-size: 13px;
                                    max-width: fit-content;
                                    padding: 0 10px 0 10px;
                                    margin: 5px 15px 5px 0 !important;
                                }
                                &:hover {
                                    background: linear-gradient(90deg, var(--blackGlass) var(--buttonSize), var(--whiteGlass) var(--buttonSize));
                                    .subtaskActions {
                                        input[type="checkbox"] {
                                            filter: invert(1);
                                            background: var(--darkInverse) !important;
                                            &:checked {
                                                &::before {
                                                    color: var(--gameBlueSoft) !important;
                                                }
                                            }
                                        }
                                    }
                                    &:not(.complete) {
                                        .changeLabel, .taskDate {
                                            color: var(--dark) !important;
                                        }
                                    }
                                }
                                .item {
                                    flex-direction: row;
                                    &:hover {
                                        .itemOrder {
                                            color: var(--gameBlueInverse);
                                        }
                                        .taskContent {
                                            color: black;
                                            font-weight: 600;
                                        }
                                        .subtaskActions {
                                            color: black;
                                            font-weight: 600;
                                        }
                                    }
                                    .itemOrder {
                                        max-height: 23px;
                                        border-radius: 0;
                                        background: transparent;
                                    }
                                    .taskContent {
                                        padding: 5px 0 5px 15px;
                                    }
                                    .subtaskActions {
                                        grid-gap: 5px;
                                        max-width: 100%;
                                        padding: 0 0 0 20px;
                                        max-width: -moz-fit-content;
                                        justify-content: space-between;
                                        .itemDate {
                                            justify-content: flex-end;
                                            margin-right: 10px !important;
                                        }
                                        input[type="checkbox"] {
                                            font-size: 8px !important;
                                            font-weight: 400 !important;
                                        }
                                    }
                                    .itemButtons {
                                        .deleteButton {
                                            min-height: 15px;
                                            margin-right: 5px;
                                            padding: 0 6px !important;
                                        }
                                    }
                                }
                            }
                        }

                        .addForm {
                            max-height: 26px;
                            padding: 14px 5px 15px;
                            border-top-left-radius: 0;
                            border-top-right-radius: 0;
                            background: var(--blackGlass);
                            border-top: 1px solid var(--gameBlue);
                            border-bottom-left-radius: var(--borderRadius);
                            border-bottom-right-radius: var(--borderRadius);
                            button {
                                max-width: fit-content;
                                height: 24px !important;
                                min-height: 24px !important;
                                max-height: 26px !important;
                                &:hover {
                                    color: black;
                                    i {
                                        color: var(--gameBlue) !important;
                                    }
                                }
                                i {
                                    max-width: fit-content;
                                }
                                span {
                                    font-size: 10px;
                                    justify-content: flex-end;
                                    max-width: fit-content !important;
                                }
                            }
                            &::before {
                                font-size: 18px;
                                border-top-left-radius: 0;
                            }
                        }

                        input {
                            font-size: 10px;
                            padding: 3px 15px;
                            background: transparent !important;
                            border-bottom-left-radius: var(--borderRadius);
                            border-bottom-right-radius: var(--borderRadius);
                            &[type="text"] {
                                &:focus-visible {
                                    outline: none !important;
                                    --tw-ring-opacity: 0 !important;
                                    --tw-ring-color: none !important;
                                }
                            }
                            &[type="number"] {
                                max-width: 60px;
                                font-weight: 700;
                                text-align: center;
                                padding: 0 !important;
                                // color: black !important;
                                // background: white !important;
                                color: white !important;
                                background: transparent !important;
                            }
                            &[type="checkbox"] {
                                -webkit-appearance: none;
                                -moz-appearance: none;
                                appearance: none;
                                position: relative;
                                max-width: -moz-fit-content;
                                max-width: 8px !important;
                                padding: 7px 8px !important;
                                border-radius: var(--borderRadius);
                                background: var(--darkCheckBox) !important;
                                &::before {
                                    color: #fff;
                                    background: var(--gameBlue);
                                }
                                &:checked {
                                    &::before {
                                        content: "✔";
                                        color: #fff;
                                        background: transparent;
                                        position: absolute;
                                        top: 50%;
                                        left: 50%;
                                        transform: translate(-50%, -50%);
                                    }
                                }
                            }
                        }
                    }
                }

                &.complete {
                    filter: invert(1);
                    &:hover {
                        .changeLabel {
                            &:not(.taskChangeLabel) {
                                filter: invert(0) !important;
                            }
                        }
                        .taskChangeLabel {
                            color: white;
                            font-weight: 600 !important;
                        }
                        .itemOrder {
                            filter: invert(0);
                            background: transparent !important;
                        }
                    }

                    .itemOrder {
                        filter: invert(1);
                        background: transparent !important;
                        color: var(--gameBlueSoft);
                    }

                    .itemName {
                       &:not(.itemDate) {
                        text-decoration-thickness: 0;
                        text-decoration: line-through;
                        text-decoration-color: black;
                       }
                    }

                    .itemButtons {
                        filter: invert(1);
                        button {
                            background: black;
                        }
                    }

                    .itemSep {
                        filter: invert(1);
                    }

                    .subTaskItem {
                        border-color: var(--gameBlueInverse) !important;
                        .item {
                            &:hover {
                                .taskChangeLabel {
                                    filter: invert(0) !important;
                                }
                            }
                        }
                    }

                    .subtaskAddForm {
                        &::before {
                            color: var(--gameBlueInverse);
                        }
                    }

                    input[type="checkbox"] {
                        &::before {
                            color: black !important;
                        }
                        &:not(:checked) {
                            background: rgba(255, 61, 0, 0.2) !important;
                        }
                    }
                }

            }
        }
    }
}

.boardItemContent {
    justify-content: flex-start !important;
    .changeLabel {
        margin: 0 !important;
        max-width: fit-content;
    }
}

.itemButtons {
    height: 100%;
    display: flex;
    grid-gap: 7px;
    padding-right: 7px;    
    justify-content: flex-end;
    flex-direction: row !important;

    &:not(.unset) {
        max-width: fit-content;
    }

    button {
        padding: 0px 10px !important;
        &.editButton {
            padding: 0 0 0 3px !important;
        }
        &.createBoardButton, &.createItemButton {
            padding: 0 0 0 10px !important;
        }
        grid-gap: 8px;
        max-width: 100%;
        min-height: 33px;
        width: min-content;
        position: relative;
        background: white;
        color: black !important;

        i {
            max-width: fit-content;
            pointer-events: none;
        }

        &:hover {
            box-shadow: none !important;
        }
    }
}

.iconButton {
    padding: 0;
    width: 100%;
    display: flex;
    min-height: var(--buttonSize);
    font-size: 0.75em;
    align-items: center;
    font-weight: 700 !important;
    transition: var(--transition);
    background: var(--blackGlass);
    justify-content: space-between;
    flex-direction: row !important;
    border-radius: var(--borderRadius);
    @media (max-width: 992px) {
        font-size: 0.85em;
    }
    span, i {
        pointer-events: none;
    }
    .iconButtonText {
        grid-gap: 0;
        display: flex;
        align-items: center;
        flex-direction: row;
    }
    &:hover {
        background: var(--darkBG);
        &:not(.listTitleButton) {
            .iconButtonText {
                color: var(--lightBG);
            }
        }
    }
}

footer {
    height: 68px;
    display: flex;
    grid-gap: 10px;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
    background: var(--navAndFooterBG);

    @media (max-width: 1369px) {
        height: 58px;
    }

    .hoverLink {
        &::before {
            bottom: -5px;
            height: 1px;
        }
    }

    div {
        display: flex;
        grid-gap: 1em;
        align-items: center;
    }

    .vertical-sep,
    i {
        color: var(--main);

        &.fas.fa-undo {
            font-size: 0.8em;
            margin-bottom: 0em;
        }
    }

    .inner {
        .right {

            img,
            svg {
                fill: var(--main);

                path {
                    fill: var(--main);
                }
            }

            .piratechs {
                max-height: 15px;
                fill: var(--main);
                margin: 0 -7px 1px 0;

                path {
                    fill: var(--main);
                }

                img,
                svg {
                    fill: var(--main);

                    path {
                        fill: var(--main);
                    }
                }
            }
        }
    }
}

@keyframes spin {
    0% {
        transform: rotate(0);
    }

    100% {
        transform: rotate(360deg);
    }
}

.listTitleButton {
    &:hover {
        filter: invert(0) !important;
    }
}

.animComplete {
    display: none !important;
}

.loaded {
    animation: fadeOut 2s var(--transition) 1 !important;
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    99% {
        opacity: 0.1;
    }
    100% {
        opacity: 0;
        display: none;
        pointer-events: none;
    }
}

.filterButtons {
    padding-top: 15px;
    button {
        width: 100%;
        transition: var(--transition);
        span {
            max-width: max-content !important;
        }
        &.filterActive {
            background: black;
        }
    }
}

.dubscript {
    font-size: 0.85em;
}

.subscript {
    font-size: 0.7em;
}

.boards {
    flex-direction: column;
    .board {
        padding: 0;
        flex-direction: column;
        &.innerBoard {
            padding: 0 0 1em 0;
        }
        .titleRow {
            .iconButton {
                font-size: 12px;
            }
        }
        h3 {
            display: inline-flex;
            flex-direction: row !important;
            max-width: min-content;
            align-items: center;
            grid-gap: 7px;
        }
        .itemButtons {
            padding: 0 !important;
        }
        .addColumnForm {
            max-width: none;
            overflow-y: hidden;
        }
        .boardColumns {
            .column {
                max-height: 475px;
                min-height: 475px;
                .titleRow {
                    padding: 0;
                    background: transparent;
                    .innerRow {
                        padding: 0;
                        .listOrder {
                            max-width: var(--buttonSize) !important;
                            min-width: max-content;
                            padding: 9px 0;
                        }
                        .iconButton {
                            font-size: 12px;
                            border-top-left-radius: 0px;
                            border-bottom-left-radius: 0px;
                        }
                    }
                    }
                }
                .rows {
                    box-shadow: none;
                    min-height: 365px;
                    background: transparent !important;
                    .boardRow {
                        padding: 1em 0;
                    }
                    .row {
                        &:not(.rowDate) {
                            min-height: 45px;
                        }
                        .inner {
                            display: flex;
                            padding: 0 10px 0 0;
                            flex-direction: row;
                            align-items: center;
                            justify-content: space-between;
                        }
                    }
                }
                h2 {
                    font-size: 14px;
                    min-width: max-content;
                }
        }
    }
}

.columns {
    max-height: 100%;
    transition: var(--transition);
    &.collapsed {
        opacity: 0;
        margin: -8px 0;
        max-height: 0px;
        pointer-events: none;
    }
}

.board {
    width: 100%;
    display: flex;
    font-size: 1.05em;
    align-items: flex-start;
    &.overflowingBoard {
        &.moreBoard {
            overflow-x: scroll;
            padding-bottom: 15px;

            &::-webkit-scrollbar {
                height: 7px !important;
                background: black !important;
            }
            
            &::-webkit-scrollbar-thumb {
                background: var(--gameBlueSoft);
            }
        }
        *:not(.dragging) {
            @media (max-width: 1390px) and (min-width: 933px) {
                .listNameRow {
                    max-width: 100%;
                }
            }
        }
    }
    .column {
        &.dragging {
            max-width: 25px !important;
        }
        --columnWidth: 32.35% !important; 
        min-height: 455px;
        position: relative;
        align-items: center;
        padding: 10px !important;
        grid-gap: 10px !important;
        justify-content: space-between;
        border-radius: var(--borderRadius);
        width: var(--columnWidth) !important;
        max-width: var(--columnWidth) !important;
        min-width: var(--columnWidth) !important;
        background: var(--gameBlueSoft) !important;
        box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.2);
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1), 0px 0px 20px rgba(0, 0, 0, 0.05);

        .columnTitle {
            min-height: 33px !important;
            max-height: 33px !important;
            i {
                transition: var(--transition);
            }
            .columnStats {
                font-weight: 700;
                padding-right: 3px;
            }
            &:hover {
                i {
                    color: var(--gameBlue);
                }
                button {
                    i {
                        color: var(--gameBlueInverse) !important;
                    }
                    &:hover {
                        i {
                            color: var(--gameBlue) !important;
                        }
                    }
                }
            }
            .listOrder {
                width: var(--buttonSize);
                padding: 9px 0;
                min-width: var(--buttonSize);
                max-width: var(--buttonSize);
                min-height: 33px !important;
                max-height: 33px !important;
            }
            .itemButtons {
                padding-right: 0;
                min-height: 33px !important;
                max-height: 33px !important;
                button {
                    border-top-left-radius: 0px;
                    min-height: 33px !important;
                    max-height: 33px !important;
                    border-bottom-left-radius: 0px;
                }
            }
        }

        .items {
            display: flex;
            grid-gap: 10px;
            min-height: 350px;
            padding: 0 !important;
            .item {
                min-height: min-content;
                background: transparent !important;
                .itemRow {
                    background: linear-gradient(90deg, var(--whiteGlass) var(--buttonSize), var(--blackGlass) var(--buttonSize));
                }
                .itemDate {
                    font-size: 9px;
                    max-width: fit-content !important;
                }
                &:hover {
                    cursor: move;
                    .itemRow {
                        border-bottom-right-radius: 0 !important;
                    }
                    .itemContent {
                        &::selection {
                            color: var(--gameBlueInverse);
                            background: white !important;
                            border-radius: var(--borderRadius);
                        }
                    }
                }
                &.complete {
                    .progress {
                        filter: invert(1);
                        .CircularProgressbar-text {
                            font-weight: 600;
                            fill: black !important;
                        }
                        .CircularProgressbar-path {
                            stroke: var(--gameBlue) !important;
                          }
                    }
                    &:hover {
                        .itemRow {
                            border-radius: var(--borderRadius) !important;
                        }
                    }
                    .itemRow {
                        &.hasTasksRow {
                            border-bottom-right-radius: 0 !important;
                        }
                        background: linear-gradient(90deg, var(--whiteGlass) var(--buttonSize), var(--blackGlass) var(--buttonSize)) !important;
                    }
                    .subtaskAddForm {
                        display: none;
                        i {
                            color: var(--gameBlueInverse) !important;
                        }
                    }
                    .subTaskItem {
                        &.dndLast {
                            .itemOrder {
                                border-bottom-left-radius:  var(--borderRadius) !important;
                            }
                            border-bottom-left-radius:  var(--borderRadius) !important;
                            border-bottom-right-radius: var(--borderRadius) !important;
                        }
                        &:last-child {
                            .itemOrder {
                                border-bottom-left-radius: var(--borderRadius) !important;
                            }
                        }
                    }
                }
                .itemOrder {
                    width: var(--buttonSize);
                    min-width: var(--buttonSize);
                    max-width: var(--buttonSize);
                    background: transparent;
                }
                .itemContents {
                    display: flex;
                    grid-gap: 5px;
                    padding: 10px 0;
                    .itemContent {
                        &::selection {
                            background: var(--gameBlue);
                        }
                    }
                    .itemName {
                        padding: 0 !important;
                    }
                    .itemCategory {
                        color: black;
                        background: white;
                        padding: 5px !important;
                        grid-gap: 5px !important;
                        font-weight: 800 !important;
                        max-width: min-content !important;
                        border-radius: var(--borderRadius);
                        justify-content: flex-start !important;
                    }
                    .subtaskIndex {
                        font-size: 0.65em;
                        max-width: fit-content;
                    }
                }
                .progress {
                    display: flex;
                    max-width: 50px;
                    margin-right: -8px;
                    align-items: flex-end;
                    justify-content: center;
                }
                .itemButtons {
                    button {
                        font-size: 0.75em;
                    }
                }
            }
        }

        form {
            input {
                min-width: 140px;
            }
            &.addForm {
                input {
                    padding: 10px 0px 10px 50px; 
                    max-height: 33px !important;
                }
                &::before {
                    width: var(--buttonSize);
                }
            }
        }
    }
}

.isDraggingOver {
    transform: none !important;
    article {
        transform: none !important;
        .boardColumns {
            transform: none !important;
        }
    }
}

.projectLinks {
    display: flex;
    flex-flow: row;
    grid-gap: 15px;
    align-items: center;
    justify-content: flex-start;
    i {
        color: var(--gameBlue);
        max-width: max-content;
    }
}

@media (max-width: 485px) {
    .filterFormDiv {
        #filter_tasks, #filter_completed {
            display: none;
        }
    }
}

@media (max-width: 405px) {
    .filterFormDiv {
       button {
        display: none;
       }
    }
}

.avatarAndUser {
    display: flex;
    flex-flow: row;
    grid-gap: 15px;
    align-items: center;
    justify-content: flex-start;
    .gitUserNameLink {
        font-size: 13px;
        font-weight: 400;
        align-self: center !important;
    }
    .projectAvatar {
        max-width: 50px;
    }
}

.projects {
    flex-wrap: wrap;
    // flex-direction: row !important;
    .project {
        width: 100%;
        overflow: hidden;
        font-weight: 700 !important;
        background: var(--blackGlass);
        border-radius: var(--borderRadius);
        /* Neumorphic Inner shadow */
        box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.2);
        /* Neumorphic Outer shadow */
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1), 0px 0px 20px rgba(0, 0, 0, 0.05);
        .inner {
            .projectOrder {
                padding: 1em;
                min-width: 50px;
                align-self: stretch;
                text-align: center;
                background: white;
                color: var(--gameBlue);
                max-width: fit-content;
                justify-content: center;
            }
            .projectContents {
                grid-gap: 10px;
                padding: 1em 0;
                a {
                    align-items: baseline;
                    max-width: fit-content;
                    align-self: flex-start;
                }
                .projectTopics {
                    // flex-wrap: wrap;
                    max-width: fit-content;
                    align-self: flex-start;
                    .projectTopic {
                        color: var(--gameBlue);
                        max-width: fit-content;
                    }
                }
            }
            .projectEnd {
                grid-gap: 5px;
                padding: 0 15px 0 0;
                max-width: fit-content;
            }
        }
    }
}

.lineSep {
    border-color: var(--gameBlueSoft);
}

.column.dragging {
    .columnStats {
        display: none !important;
    }
}

.detailView {
    .detailViewImage {
        max-height: 675px;
    }
    form {
        .formTop {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
            h3 {
                text-align: left;
            }
            .CircularProgressbar {
                max-height: 110px;
            }
        }
        .toggle-buttons {
            width: 100%;
            grid-gap: 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            button {
                width: 100%;
                &.deleteButton {
                    filter: invert(0);
                }
            }
            .toggle-button {
              display: flex;
              padding: 5px 10px;
              border-radius: 5px;
              background: black;
              align-items: center;
              justify-content: center;
              cursor: pointer !important;
              label {
                cursor: pointer !important;
              }
              input[type="radio"] {
                display: none;
              }
              &.active {
                  background: var(--gameBlue);
                  color: #fff;
                  &:hover {
                      background: var(--gameBlueInverse);
                  }
              }
            }
        }
        &::before {
            content: attr(data-index);
            position: absolute;
            height: 100%;
            width: var(--buttonSize);
            left: 0;
            top: 0;
            font-weight: 600;
            font-size: 30px;
            display: flex;
            justify-content: center;
            align-items: center;
            background: black;
            color: var(--gameBlue);
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }
        button {
            &:disabled {
                opacity: 0.35;
            }
        }
    }
}

.gap5 { grid-gap: 5px; }
.gap10 { grid-gap: 10px; }
.gap15 { grid-gap: 15px; }